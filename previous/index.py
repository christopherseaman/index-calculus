#!/usr/bin/env python3

import gmpy2
from gmpy2 import mpz, num_digits, isqrt

# mpz_init_set_str(base, "244241057144443665472449725715508406620552440771362355600491", 10); /* 5^a */
# mpz_init_set_str(base, "794175985233932171488379184551301257494458499937502344155004", 10); /* 5^b */
# mpz_init_set_str(p,   "3217014639198601771090467299986349868436393574029172456674199", 10); /* p   */
# powmod(x, y, m) returns (x ** y) mod m

a5  = mpz( 244241057144443665472449725715508406620552440771362355600491)
b5  = mpz( 794175985233932171488379184551301257494458499937502344155004)
p   = mpz(3217014639198601771090467299986349868436393574029172456674199)
sq  = isqrt(p)
sqq = isqrt(sq) # max bound for factor base (assuming a sieve aiming for sq)
# print(mpz(1793603813331863367303271339953 + 1)**2 % p)



# print(p.bit_length())
# print(sq.bit_length())
# print(a5 * b5 % p)
# print(mpz(5)**255 % p)
# print (type(a5 * b5 % p))

## fives = mpz(1);
## small = p
## for i in range(2000000000):
##     if ((i>85) & (fives < small)):
##         print(i, '\t', (fives))
##         small = fives
##     fives = fives * 5 % p

#              p    3217014639198601771090467299986349868436393574029172456674199
#    5**13700010 	        94327415647168061644977103073880231739496944848147834
#   5**158361293 	        21892700492989916045453704047809591799036313691452419
#   5**364528863 	        19370006864407498658315467175518928474198016849718311
#   5**921159066 	        10515378269126259423984982649618141172161430651776309
#  5**1537792560          	  905373827763415977440348940524557955164226083609666
#      (sq+1)**2                                  1743405843052061844322180047917
#            sqq                                                 1339254947100014
